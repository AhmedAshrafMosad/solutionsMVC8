@model SchoolManagement.Models.Department
@{
    ViewData["Title"] = "Edit Department";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-warning text-white">
                    <h4 class="mb-0">
                        <i class="bi bi-pencil-square me-2"></i>Edit Department
                    </h4>
                </div>
                <div class="card-body">
                    <form asp-action="Edit" method="post" id="editForm">
                        <input type="hidden" asp-for="Id" />
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        <div class="form-group mb-3">
                            <label asp-for="Name" class="form-label">Department Name</label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="MgrName" class="form-label">Manager Name</label>
                            <input asp-for="MgrName" class="form-control" />
                            <span asp-validation-for="MgrName" class="text-danger"></span>
                        </div>

                        <div class="d-flex gap-2 justify-content-end mt-4">
                            <button type="submit" class="btn btn-warning">
                                <i class="bi bi-check-lg me-1"></i>Update Department
                            </button>
                            <a asp-action="GetAll" class="btn btn-secondary">
                                <i class="bi bi-x-circle me-1"></i>Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('editForm');

            // Real-time validation
            const inputs = form.querySelectorAll('input');
            inputs.forEach(input => {
                input.addEventListener('blur', function() {
                    validateField(this);
                });

                input.addEventListener('input', function() {
                    if (this.classList.contains('is-invalid')) {
                        validateField(this);
                    }
                });
            });

            function validateField(field) {
                if (field.checkValidity()) {
                    field.classList.remove('is-invalid');
                    field.classList.add('is-valid');
                } else {
                    field.classList.remove('is-valid');
                    field.classList.add('is-invalid');
                }
            }
        });
    </script>
}