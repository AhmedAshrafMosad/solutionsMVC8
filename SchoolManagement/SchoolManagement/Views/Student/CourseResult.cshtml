@model SchoolManagement.ViewModels.StudentCourseRequestViewModel
@{
    ViewData["Title"] = "Student Course Result";
}

@section Styles {
    <style>
        .result-card {
            border-left: 4px solid #17a2b8;
        }

        .grade-display {
            font-size: 2rem;
            font-weight: bold;
        }
    </style>
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h4 class="mb-0">
                        <i class="bi bi-clipboard-check me-2"></i>Student Course Result
                    </h4>
                </div>
                <div class="card-body">
                    <form asp-action="CourseResult" method="post" id="resultForm">
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <label asp-for="StudentId" class="form-label fw-bold">Select Student</label>
                                <select asp-for="StudentId" class="form-select" asp-items="ViewBag.Students" required>
                                    <option value="">-- Select Student --</option>
                                </select>
                                <span asp-validation-for="StudentId" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="CourseId" class="form-label fw-bold">Select Course</label>
                                <select asp-for="CourseId" class="form-select" asp-items="ViewBag.Courses" required>
                                    <option value="">-- Select Course --</option>
                                </select>
                                <span asp-validation-for="CourseId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="bi bi-search me-1"></i>Show Result
                            </button>
                        </div>
                    </form>

                    @if (ViewBag.Result != null)
                    {
                        var result = ViewBag.Result as SchoolManagement.ViewModels.StudentCourseResultViewModel;
                        <div class="mt-4">
                            <div class="card result-card">
                                <div class="card-header bg-light">
                                    <h5 class="mb-0">
                                        <i class="bi bi-graph-up me-2"></i>Result Details
                                    </h5>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <dl class="row">
                                                <dt class="col-sm-4">Student Name:</dt>
                                                <dd class="col-sm-8"><strong>@result.StudentName</strong></dd>

                                                <dt class="col-sm-4">Course Name:</dt>
                                                <dd class="col-sm-8"><strong>@result.CourseName</strong></dd>
                                            </dl>
                                        </div>
                                        <div class="col-md-6 text-center">
                                            <div class="grade-display" style="color: @result.Color;">
                                                @result.Grade
                                            </div>
                                            @if (result.Color == "green")
                                            {
                                                <span class="badge bg-success fs-6">
                                                    <i class="bi bi-check-circle me-1"></i>Passed
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger fs-6">
                                                    <i class="bi bi-x-circle me-1"></i>Failed
                                                </span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else if (ViewContext.HttpContext.Request.Method == "POST")
                    {
                        <div class="alert alert-warning mt-4 text-center">
                            <i class="bi bi-exclamation-triangle me-2"></i>
                            No result found for the selected student and course combination.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('resultForm');
            const studentSelect = document.querySelector('#StudentId');
            const courseSelect = document.querySelector('#CourseId');

            // Real-time validation
            [studentSelect, courseSelect].forEach(select => {
                select.addEventListener('change', function() {
                    if (this.checkValidity()) {
                        this.classList.remove('is-invalid');
                        this.classList.add('is-valid');
                    } else {
                        this.classList.remove('is-valid');
                        this.classList.add('is-invalid');
                    }
                });
            });

            // Form submission
            form.addEventListener('submit', function(e) {
                let isValid = true;

                [studentSelect, courseSelect].forEach(select => {
                    if (!select.checkValidity()) {
                        select.classList.add('is-invalid');
                        isValid = false;
                    }
                });

                if (!isValid) {
                    e.preventDefault();
                    const firstInvalid = form.querySelector('.is-invalid');
                    if (firstInvalid) {
                        firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }
                }
            });
        });
    </script>
}