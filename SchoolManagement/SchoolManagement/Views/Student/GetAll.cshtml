@model SchoolManagement.ViewModels.StudentListViewModel
@{
    ViewData["Title"] = "Students Management";
}

@section Styles {
    <style>
        .table-hover tbody tr:hover {
            background-color: rgba(0, 123, 255, 0.1);
            cursor: pointer;
        }

        .badge-success {
            background: linear-gradient(135deg, #28a745, #20c997);
        }
    </style>
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>
            <i class="bi bi-people me-2"></i>Students Management
        </h2>
        <a href="@Url.Action("Add")" class="btn btn-success">
            <i class="bi bi-plus-circle me-1"></i>Add New Student
        </a>
    </div>

    <!-- Search and Filter Form -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-4">
                    <input type="text" name="searchName" value="@Model.SearchName" class="form-control" placeholder="Search by student name..." />
                </div>
                <div class="col-md-4">
                    <select name="filterDepartmentId" class="form-select">
                        <option value="">All Departments</option>
                        @foreach (var dept in Model.Departments)
                        {
                            <option value="@dept.Id" selected="@(Model.FilterDepartmentId == dept.Id)">@dept.Name</option>
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="bi bi-search me-1"></i>Search
                    </button>
                    <a href="@Url.Action("GetAll")" class="btn btn-secondary">
                        <i class="bi bi-arrow-clockwise me-1"></i>Reset
                    </a>
                </div>
            </form>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>@TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Students Table -->
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">
                <i class="bi bi-list-ul me-2"></i>Students List
                <span class="badge bg-light text-primary ms-2">@Model.TotalCount Total</span>
            </h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover table-striped mb-0">
                    <thead class="table-dark">
                        <tr>
                            <th>Name</th>
                            <th>Age</th>
                            <th>Department</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var student in Model.Students)
                        {
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="avatar-circle bg-primary text-white me-3">
                                            @student.Name.Substring(0, 1).ToUpper()
                                        </div>
                                        <div>
                                            <strong>@student.Name</strong>
                                            <div class="text-muted small">ID: #@student.Id</div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <span class="badge bg-info">@student.Age years</span>
                                </td>
                                <td>
                                    <span class="badge badge-success">@student.Department?.Name</span>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a href="@Url.Action("GetById", new { id = student.Id })" class="btn btn-info btn-sm" title="View Details">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a href="@Url.Action("Edit", new { id = student.Id })" class="btn btn-warning btn-sm" title="Edit">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a href="@Url.Action("Delete", new { id = student.Id })" class="btn btn-danger btn-sm" title="Delete">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("GetAll", new { page = Model.CurrentPage - 1, searchName = Model.SearchName, filterDepartmentId = Model.FilterDepartmentId })">
                        <i class="bi bi-chevron-left"></i> Previous
                    </a>
                </li>

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("GetAll", new { page = i, searchName = Model.SearchName, filterDepartmentId = Model.FilterDepartmentId })">@i</a>
                    </li>
                }

                <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("GetAll", new { page = Model.CurrentPage + 1, searchName = Model.SearchName, filterDepartmentId = Model.FilterDepartmentId })">
                        Next <i class="bi bi-chevron-right"></i>
                    </a>
                </li>
            </ul>
        </nav>
    }

    <!-- Summary -->
    <div class="row mt-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white text-center">
                <div class="card-body py-3">
                    <h6 class="card-title">Total Students</h6>
                    <h4>@Model.TotalCount</h4>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white text-center">
                <div class="card-body py-3">
                    <h6 class="card-title">Current Page</h6>
                    <h4>@Model.CurrentPage</h4>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white text-center">
                <div class="card-body py-3">
                    <h6 class="card-title">Page Size</h6>
                    <h4>@Model.PageSize</h4>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white text-center">
                <div class="card-body py-3">
                    <h6 class="card-title">Total Pages</h6>
                    <h4>@Model.TotalPages</h4>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Auto-dismiss alerts
            setTimeout(function() {
                $('.alert').alert('close');
            }, 5000);

            // Table row click
            $('table tbody tr').click(function(e) {
                if (!$(e.target).is('a, button, i')) {
                    const studentId = $(this).find('td:first-child .text-muted').text().replace('ID: #', '');
                    window.location.href = '@Url.Action("GetById")/' + studentId;
                }
            });
        });
    </script>
}